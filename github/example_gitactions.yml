name: CI/CD (simple Flask + Docker)

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  # --- CI mínimo: tests ---
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: pip

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          pip install pytest

      - name: Run tests
        run: pytest -q

  # --- CD mínimo: build + push de imagen (solo push a main) ---
  publish:
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    needs: [test]
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: ghcr.io/${{ github.repository }} # Cambia a docker.io/<user>/<repo> si usas Docker Hub
    steps:
      - uses: actions/checkout@v4

      # GHCR (usa el GITHUB_TOKEN del repo automáticamente)
      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Si usas Docker Hub, comenta el bloque anterior y usa este:
      # - name: Login to Docker Hub
      #   uses: docker/login-action@v3
      #   with:
      #     registry: docker.io
      #     username: ${{ secrets.DOCKERHUB_USERNAME }}
      #     password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ${{ env.IMAGE_NAME }}:latest
            ${{ env.IMAGE_NAME }}:${{ github.sha }}
